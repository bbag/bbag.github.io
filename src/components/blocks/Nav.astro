---
import { Image } from 'astro:assets';
import Avatar from '@/assets/img/billy.png'
import KeyboardButton from '@/components/base/KeyboardButton.astro'

const links = [
    {
        title: 'Projects',
        href: '/#projects',
        paths: '<path d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z" /><path d="M7 20h10" /><path d="M9 16v4" /><path d="M15 16v4" />'
    },
    {
        title: 'Work',
        href: '#',
        paths: '<path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" /><path d="M9 7l6 0" /><path d="M9 11l6 0" /><path d="M9 15l4 0" />'
    },
    {
        title: 'Contact',
        href: '#',
        paths: '<path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" /><path d="M3 7l9 6l9 -6" />'
    },
    {
        title: 'GitHub',
        href: 'https://github.com/bbag',
        paths: '<path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />'
    },
    {
        title: 'LinkedIn',
        href: 'https://www.linkedin.com/in/billybaggerman',
        paths: '<path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z" /><path d="M8 11l0 5" /><path d="M8 8l0 .01" /><path d="M12 16l0 -5" /><path d="M16 16v-3a2 2 0 0 0 -4 0" />'
    },
    {
        title: 'CodePen',
        href: 'https://codepen.io/bbagg/',
        paths: '<path d="M3 15l9 6l9 -6l-9 -6l-9 6" /><path d="M3 9l9 6l9 -6l-9 -6l-9 6" /><path d="M3 9l0 6" /><path d="M21 9l0 6" /><path d="M12 3l0 6" /><path d="M12 15l0 6" />'
    },
]
---

<nav>
    <a class="billy-link" href="/">
        <Image src={Avatar} alt="Billy Baggerman" densities={[1, 2, 3]} class="billy" />
        <span class="link-text">Billy Baggerman</span>
    </a>
    <span class="mobile-title-text">Billy Baggerman</span>
    <button class="mobile-menu-button">
        <svg class="line-icon" width="24" height="24" viewBox="0 0 24 24">
            <path d="M4 6l16 0" />
            <path d="M4 12l16 0" />
            <path d="M4 18l12 0" />
        </svg>
    </button>
    <div class="links-container" aria-expanded="true">
        <div class="links">
            <!-- <div /> -->
            {links.map(link => (
                <KeyboardButton href={link.href || "#"} size="sm" textAlign="left">
                    <svg xmlns="http://www.w3.org/2000/svg" class="link-icon" width="24" height="24" viewBox="0 0 24 24">
                        <Fragment set:html={link.paths} />
                    </svg>
                    <span class="link-text">{link.title}</span>
                </KeyboardButton>
            ))}
        </div>
    </div>
</nav>

<script lang="ts">
const mobileMenuButton = document.querySelector('.mobile-menu-button')

mobileMenuButton.addEventListener('click', () => {
    const nav = document.querySelector('nav')
    const linksContainer = document.querySelector('.links-container')

    if (nav.classList.contains('nav-open')) {
        nav.classList.remove('nav-open')
        linksContainer.setAttribute('aria-expanded', 'false')
    } else {
        nav.classList.add('nav-open')
        linksContainer.setAttribute('aria-expanded', 'true')
    }
})
</script>

<style lang="scss">
@import '@/styles/_Variables.scss';

$margin: 0.875rem;
$transition-time: 250ms;
$transition-func: cubic-bezier(0.1, 0, 0.4, 1);

nav {
    align-items: center;
    background: #FFF;
    border: 1px solid #DFE3E9;
    box-shadow: 0 1px 2px rgba(0, 10, 20, 0.08);
    border-radius: 1rem;
    display: grid;
    gap: 0 0.5rem;
    grid-template-columns: 3rem minmax(0, 1fr) 3rem;
    justify-items: flex-start;
    left: $margin;
    padding: 0.5rem;
    position: fixed;
    top: $margin;
    transition: width $transition-time $transition-func;
    width: calc(100% - ($margin * 2));
    z-index: 3;
}

hr {
    background: #DFE3E9;
    border: 0;
    border-radius: 1rem;
    height: 2px;
    margin: 0;
}

.billy-link {
    position: relative;

    &:focus {
        outline: none;
    }

    &:focus-visible {
        outline: 2px solid $color-primary;
    }

    & .link-text {
        left: 3.5rem;
    }
}

.billy,
.link-icon {
    display: block;
}

.billy {
    border: 2px solid #FFF;
    border-radius: 0.375rem;
    box-shadow: 0 0.125rem 0.25rem 0.125rem rgba(0, 10, 20, 0.1);
    max-width: initial;
    width: 2rem;
}

.link-icon {
    fill: none;
    flex: 0 0 2rem;
    stroke: currentColor;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 1.25;
}

.links-container {
    // gap: 1rem;
    display: grid;
    grid-column: 1 / -1;
    grid-template-rows: 0fr;
    justify-self: stretch;
    overflow: hidden;
    transition: grid-template-rows $transition-time $transition-func;

    .nav-open & {
        grid-template-rows: 1fr;
    }
}

.links {
    display: flex;
    flex-direction: column;
    gap: 1.125rem;
    min-height: 0;
    padding: 0 0.5rem;

    & a {
        padding: 0.5625rem 0.5rem 0.4375rem;

        &:first-child {
            margin-top: 1rem;
        }

        &:last-child {
            margin-bottom: 0.75rem;
        }
    }
}

a {
    align-items: center;
    border-radius: 0.5rem;
    color: #000;
    display: inline-flex;
    gap: 1rem;
    padding: 0.5rem;
    text-decoration: none;
    transition: background-color $transition-time $transition-func, color $transition-time $transition-func;
    white-space: nowrap;

    &:focus-visible {
        background: #F2F5FB;
        box-shadow: inset 0 0 0 0.125rem $color-primary; 
        color: $color-primary;
        outline: none;
    }

    @media (hover: hover) {
        &:hover{
            background: #F2F5FB;
            color: $color-primary;
        }
    }
}

.link-text {
    font-size: 0.875rem;
    left: 3rem;
    position: absolute;
    top: 50%;
    transform: translateY(calc(-50% + 1px));

    .billy-link & {
        display: none;
    }
}

.mobile-menu-button {
    align-items: center;
    background: none;
    border: none;
    border-radius: 0.375rem;
    cursor: pointer;
    display: flex;
    justify-content: center;
    flex: 0 0 2rem;
    padding: 0.5rem;

    &:focus {
        outline: none;
    }

    &:focus-visible {
        background: #F2F5FB;
        color: $color-primary;
        outline: 2px solid $color-primary;
    }
}

@media (min-width: $breakpoint-xs) {
    nav {
        $margin: 1.25rem;
        
        left: $margin;
        top: $margin;
        width: calc(100% - ($margin * 2));
    }
}

@media (min-width: $breakpoint-sm) {
    $margin: 2rem;

    nav {
        align-items: stretch;
        display: flex;
        flex-direction: column;
        height: calc(100vh - ($margin * 2));
        height: calc(100dvh - ($margin * 2));
        justify-content: space-between;
        left: $margin;
        min-width: 6rem;
        overflow-x: hidden;
        overflow-y: auto;
        padding: 1.5rem;
        top: $margin;
        width: 6.125rem;

        &:hover,
        &:focus-within {
            width: 16rem;
        }
    }

    a {
        padding: 0.5rem;
    }

    .mobile-title-text {
        display: none;
    }

    .links-container {
        grid-template-rows: initial;
        justify-self: initial;
        overflow: visible;

        .nav-open & {
            grid-template-rows: 1fr;
        }
    }

    .links {
        gap: 1.125rem;
        padding: 0;

        & a {
            &:last-child {
                margin-bottom: 0.25rem;
            }
        }
    }

    .link-text {
        font-size: 0.9375rem;
        -webkit-mask-image: linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 40%, rgba(0, 0, 0, 1) 60%, rgba(0, 0, 0, 1) 100%);
        mask-image: linear-gradient(to left, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 40%, rgba(0, 0, 0, 1) 60%, rgba(0, 0, 0, 1) 100%);
        mask-position: right;
        mask-size: 250%;
        transition: mask-position $transition-time $transition-func;

        nav:hover &,
        nav:focus-within & {
            mask-position: left;
            transition-delay: 33ms;
        }

        .billy-link & {
            display: inline;
        }
    }

    .mobile-menu-button {
        display: none;
    }
}
</style>

<style is:inline>
    .links a:first-child {
        /* margin-top: 1rem; */
    }
</style>